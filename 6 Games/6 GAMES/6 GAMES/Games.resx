<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>